# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestBottomMenu():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_bottomMenu(self):
    self.driver.get("https://www.spotify.com/kr-ko/")
    assert self.driver.find_element(By.XPATH, "//*[@id=\"__next\"]/div[1]/header/div/div[1]/a/span").text == "Spotify"
    assert self.driver.find_element(By.XPATH, "//*[@id=\"mh-footer\"]/nav/div[2]/dl[1]/dt").text == "회사"
    assert self.driver.find_element(By.LINK_TEXT, "상세정보").text == "상세정보"
    assert self.driver.find_element(By.LINK_TEXT, "채용 정보").text == "채용 정보"
    assert self.driver.find_element(By.LINK_TEXT, "For the Record").text == "For the Record"
    assert self.driver.find_element(By.XPATH, "//*[@id=\"mh-footer\"]/nav/div[2]/dl[2]/dt").text == "커뮤니티"
    assert self.driver.find_element(By.LINK_TEXT, "아티스트").text == "아티스트"
    assert self.driver.find_element(By.LINK_TEXT, "개발자").text == "개발자"
    assert self.driver.find_element(By.LINK_TEXT, "투자자").text == "투자자"
    assert self.driver.find_element(By.LINK_TEXT, "공급업체").text == "공급업체"
    assert self.driver.find_element(By.XPATH, "//*[@id=\"mh-footer\"]/nav/div[2]/dl[3]/dt").text == "유용한 링크"
    assert self.driver.find_element(By.LINK_TEXT, "지원").text == "지원"
    assert self.driver.find_element(By.LINK_TEXT, "웹 플레이어").text == "웹 플레이어"
    elements = self.driver.find_elements(By.XPATH, "//*[@id=\"mh-footer\"]/nav/div[3]/ul/li[1]/a/span")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "//*[@id=\"mh-footer\"]/nav/div[3]/ul/li[2]/a")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.XPATH, "//*[@id=\"mh-footer\"]/nav/div[3]/ul/li[3]/a/span")
    assert len(elements) > 0
    self.driver.find_element(By.LINK_TEXT, "상세정보").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".fHEBbi").text == "Spotify에 관하여"
    self.driver.find_element(By.CSS_SELECTOR, ".mh-header-primary > svg").click()
    self.driver.find_element(By.LINK_TEXT, "채용 정보").click()
    self.driver.get("https://www.spotify.com/kr-ko/")
    self.driver.get("https://www.spotify.com/kr-ko/")
    self.driver.find_element(By.LINK_TEXT, "아티스트").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".bmcxRh > .Type__TypeElement-goli3j-0").text == "Stream On returns March 8"
    self.driver.get("https://www.spotify.com/kr-ko/")
    self.driver.find_element(By.LINK_TEXT, "개발자").click()
    assert self.driver.find_element(By.XPATH, "//*[@id=\"features-explorer\"]/div/div/h3").text == "Explore audio features and in-depth audio analysis of tracks"
    self.driver.get("https://www.spotify.com/kr-ko/")
    self.driver.find_element(By.LINK_TEXT, "투자자").click()
    assert self.driver.find_element(By.XPATH, "//*[@id=\"_ctrl0_ctl33_divModuleContainer\"]/div/div/div[1]/div[2]/h1").text == "Spotify Investors"
    self.driver.get("https://www.spotify.com/kr-ko/")
    self.driver.find_element(By.LINK_TEXT, "공급업체").click()
    assert self.driver.find_element(By.XPATH, "//*[@id=\"splash\"]/div[2]/div/div[2]/h1").text == "Spotify for Vendors"
    self.driver.get("https://www.spotify.com/kr-ko/")
    self.driver.find_element(By.LINK_TEXT, "지원").click()
    assert self.driver.find_element(By.XPATH, "//*[@id=\"root\"]/div[2]/div[1]/h2").text == "무엇을 도와 드릴까요?"
    self.driver.get("https://www.spotify.com/kr-ko/")
    self.driver.find_element(By.LINK_TEXT, "웹 플레이어").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".moDRd9td0KtitPDzR7OJ > .Type__TypeElement-sc-goli3j-0").text == "홈"
    self.driver.get("https://www.spotify.com/kr-ko/")
    self.driver.find_element(By.CSS_SELECTOR, ".mh-social-icon-instagram").click()
    self.driver.find_element(By.CSS_SELECTOR, ".mh-social-icon-twitter").click()
    self.driver.find_element(By.CSS_SELECTOR, ".mh-social-icon-facebook").click()
  
